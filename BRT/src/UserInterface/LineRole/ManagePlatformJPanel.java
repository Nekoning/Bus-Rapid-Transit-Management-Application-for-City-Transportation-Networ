/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.LineRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PlatformOrganization;
import Business.Organization.RegulationOrganization;
import Business.Platform.Platform;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DispatchBusWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jianing Wang
 */
public class ManagePlatformJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePlatformJPanel
     */
    
    private JPanel userProcessContainer;
    private PlatformOrganization platformOrganization;
    private UserAccount userAccount;
    private Enterprise enterprise;
      
    public ManagePlatformJPanel(JPanel userProcessContainer, UserAccount userAccount, 
            PlatformOrganization platformOrganization, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.platformOrganization = platformOrganization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        
        populatePlatformTable();
    }
    
    public void populatePlatformTable() {
        DefaultTableModel dtm = (DefaultTableModel) platformJTable.getModel();
        dtm.setRowCount(0);

        for (Employee employee : platformOrganization.getEmployeeDirectory().getEmployeeList()) {
            if (employee instanceof Platform) {
                Platform platform = (Platform) employee;
                Object row[] = new Object[2];

                row[0] = platform;
                row[1] = platform.getPlatformID();

                dtm.addRow(row);
            }

        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        platformJTable = new javax.swing.JTable();
        submitJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        volumnJTextField = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        jLabel1.setText("Manage Platform Information");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 127, -1, -1));

        platformJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Platform Name", "Platform ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(platformJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 218, 593, 139));

        submitJButton.setText("Submit");
        submitJButton.setMaximumSize(new java.awt.Dimension(129, 41));
        submitJButton.setMinimumSize(new java.awt.Dimension(129, 41));
        submitJButton.setPreferredSize(new java.awt.Dimension(129, 41));
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(565, 397, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 531, -1, -1));

        jLabel2.setText("Passenger Flow Volume:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 401, 305, -1));
        add(volumnJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 398, 110, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardlayout = (CardLayout) userProcessContainer.getLayout();
        cardlayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = platformJTable.getSelectedRow();
        if (selectedRow >= 0) {
            Platform platform = (Platform) platformJTable.getValueAt(selectedRow, 0);
            try {
                platform.setVolumn(Integer.parseInt(volumnJTextField.getText()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Please input valid data in Volumn TextField.", 
                        "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            } else {
            JOptionPane.showMessageDialog(null, "Please select a row first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        

    }//GEN-LAST:event_submitJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable platformJTable;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField volumnJTextField;
    // End of variables declaration//GEN-END:variables
}
